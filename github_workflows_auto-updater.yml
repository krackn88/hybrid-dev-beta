name: Auto Repository Updater

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '*/30 * * * *'  # Run every 30 minutes
  workflow_dispatch:  # Allow manual triggering

jobs:
  update:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
    
    - name: Set up Node.js (for VSCode extension)
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    
    - name: Run polling service once
      run: |
        python -c "
import os
import requests
import subprocess
import sys

def check_and_build_extension():
    if os.path.exists('vscode-extension') and os.path.exists('vscode-extension/package.json'):
        print('Building VSCode extension')
        try:
            subprocess.run(['npm', 'install'], cwd='vscode-extension', check=True)
            subprocess.run(['npm', 'run', 'compile'], cwd='vscode-extension', check=True)
            print('VSCode extension built successfully')
            return True
        except subprocess.CalledProcessError as e:
            print(f'Error building VSCode extension: {e}')
            return False
    return True

# Check for changes to the repository
repo_owner = os.environ.get('GITHUB_REPOSITORY_OWNER')
repo_name = os.environ.get('GITHUB_REPOSITORY').split('/')[1]

# Build VSCode extension if it exists
success = check_and_build_extension()

# Commit and push changes if needed
try:
    if subprocess.run(['git', 'status', '--porcelain'], capture_output=True, text=True).stdout.strip():
        print('Changes detected, committing...')
        subprocess.run(['git', 'config', '--global', 'user.name', 'GitHub Actions'], check=True)
        subprocess.run(['git', 'config', '--global', 'user.email', 'actions@github.com'], check=True)
        subprocess.run(['git', 'add', '.'], check=True)
        subprocess.run(['git', 'commit', '-m', 'Auto-update via GitHub Actions'], check=True)
        subprocess.run(['git', 'push'], check=True)
        print('Changes committed and pushed successfully')
    else:
        print('No changes to commit')
except Exception as e:
    print(f'Error during commit: {e}')
    sys.exit(1 if not success else 0)
        "
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}