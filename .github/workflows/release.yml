name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
          if [ -d "vscode-extension" ]; then
            cd vscode-extension
            npm install
            npm install -g vsce
          fi
      
      - name: Set version
        id: set-version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/v}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Build VSCode extension
        if: ${{ success() }}
        run: |
          if [ -d "vscode-extension" ]; then
            cd vscode-extension
            npm version $VERSION --no-git-tag-version
            npm run compile
            vsce package
            echo "VSIX_PATH=$(find . -name '*.vsix' -type f | head -n 1)" >> $GITHUB_ENV
          fi
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.set-version.outputs.version }}
          release_name: Release v${{ steps.set-version.outputs.version }}
          draft: false
          prerelease: false
      
      - name: Upload VSCode Extension
        if: ${{ success() && env.VSIX_PATH != '' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.VSIX_PATH }}
          asset_name: vscode-hybrid-extension-${{ steps.set-version.outputs.version }}.vsix
          asset_content_type: application/octet-stream
